package com.gestione_dispositivi.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Pageable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.gestione_dispositivi.enums.StatoDispositivo;
import com.gestione_dispositivi.model.Device;
import com.gestione_dispositivi.service.DeviceService;
import com.gestione_dispositivi.service.UserService;

@RestController
@RequestMapping ("/api/Ddevice")
public class DeviceController {
	@Autowired DeviceService deviceService;
	@Autowired UserService userService;
	
	@GetMapping
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<?> getDevices(Pageable pageable){
		return new ResponseEntity<>(deviceService.findAllDevice(pageable),HttpStatus.OK);
	}
	
	@PostMapping
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<?> createDevice(@RequestBody Device d){
		return new ResponseEntity<>(deviceService.saveDevice(d), HttpStatus.CREATED);
	}
	
	@PutMapping
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<?> updateDevice(@RequestBody Device d){
		return new ResponseEntity<>(deviceService.updateDevice(d), HttpStatus.OK);
	}
	
	@DeleteMapping(value = "/{id}")
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<?> deleteById(@PathVariable Long id){
			return new ResponseEntity<>(deviceService.removeDevice(id), HttpStatus.OK);
	}
	
	@GetMapping(path = "/{id}")
	@PreAuthorize("hasRole('ADMIN')")
	public ResponseEntity<?> getById(@PathVariable(name = "id") Long id){
		return new ResponseEntity<>(deviceService.findById(id), HttpStatus.OK);
	}
}
